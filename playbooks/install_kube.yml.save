---

- name: Install and configure services
  hosts: all
  become: true
  tasks:

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Installing Prerequisites for Kubernetes
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - vim
          - software-properties-common
        state: present

    - name: disable SWAP (Kubeadm requirement)
      shell: |
        swapoff -a

    - name: disable SWAP in fstab (Kubeadm requirement)
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

    - name: create an empty file for the Containerd module
      copy:
        content: ""
        dest: /etc/modules-load.d/containerd.conf
        force: no

    - name: apply sysctl params without reboot
      command: sysctl --system

    - name: install APT Transport HTTPS
      apt:
        name: apt-transport-https
        state: present

    - name: add Docker apt-key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker-apt-keyring.asc
        mode: '0644'
        force: true

    - name: add Docker's APT repository
      apt_repository:
        repo: "deb [arch={{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }} signed-by=/etc/apt/keyrings/docker-apt-keyring.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes


    - name: add Kubernetes apt-key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: '0644'
        force: true

    - name: Add Google official GPG key
      apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present


    - name: Add Kubernetes Repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/trusted.gpg.d/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
        state: present
        filename: kubernetes
        mode: 0600

    - name: install Containerd
      apt:
        name: containerd.io
        state: present

    - name: create Containerd directory
      file:
        path: /etc/containerd
        state: directory

    - name: add Containerd configuration
      shell: /usr/bin/containerd config default > /etc/containerd/config.toml

    - name: configuring the systemd cgroup driver for Containerd
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: '            SystemdCgroup = false'
        line: '            SystemdCgroup = true'

    - name: enable the Containerd service and start it
      systemd:
        name: containerd
        state: restarted
        enabled: yes
        daemon-reload: yes

    - name: install kubelet
      apt:
        name: kubelet
        state: present
        update_cache: true

    - name: install kubeadm
      apt:
        name: kubeadm
        state: present

    - name: Enable service kubelet, and enable persistently
      service:
        name: kubelet
        enabled: yes

    - name: Install aptitude using apt
      apt:
        name: aptitude

        state: latest
        update_cache: yes

    - name: Import public key
      apt_key:
        url: 'https://www.mongodb.org/static/pgp/server-4.4.asc'
        state: present

    - name: Add repository
      apt_repository:
        filename: '/etc/apt/sources.list.d/mongodb-org-4.4.list'
        repo: 'deb https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.4 multiverse'
        state: present
        update_cache: yes

    - name: Install mongoDB
      apt:
        name: mongodb-org
        state: present
        update_cache: yes

    - name: Ensure mongodb is running and and enabled to start automatically on reboots
      service:
        name: mongod
        enabled: yes
        state: started

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install MongoDB packages
      apt:
        name: mongodb-org
        state: latest

    - name: Enable and start MongoDB service
      service:
        name: mongod
        state: started
        enabled: yes

    - name: Enable remote connections in MongoDB
      lineinfile:
        path: /etc/mongod.conf
        regexp: '^ *bindIp:.*'
        line: '  bindIp: 0.0.0.0'
        state: present
        backup: yes
      notify:
        - Restart MongoDB Service

    - name: Enable authentication in MongoDB
      lineinfile:
        path: /etc/mongod.conf
        line: "security:\n  authorization: enabled"
        insertafter: "^#security:"
        state: present
        backup: yes
      notify:
        - Restart MongoDB Service

    - name: Install PostgreSQL
      apt:
        name: postgresql
        state: present

    - name: Install Minio
      apt:
        name: minio
        state: present

    - name: Install NFS Server
      apt:
        name: nfs-kernel-server
        state: present

    - name: Add Keycloak apt key
      apt_key:
        url: https://keycloak.org/downloads/keycloak-24.0.1.zip
        state: present

    - name: Add Keycloak apt repository
      apt_repository:
        repo: deb https://downloads.jboss.org/keycloak/24.0.1/keycloak-24.0.1.zip
        state: present

    - name: Install Keycloak
      apt:
        name: keycloak
        state: present


- hosts: workstations
  become: yes
  tasks:
    - name: install Kubectl
      apt:
        name: kubectl=1.29.*
        state: present
        force: yes


- hosts: all
  become: true
  tasks:

    - name: Reboot all the kubernetes nodes.
      reboot:
        post_reboot_delay: 10
        reboot_timeout: 40
        connect_timeout: 60
        test_command: uptime
